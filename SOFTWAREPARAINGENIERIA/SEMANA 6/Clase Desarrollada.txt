//Implementación y llamada de una función con un argumento de entrada

#include <iostream>

using namespace std;

double F(double x)  //declaración de la función
{
	return 2*x+1;
}

int main()
{
	cout<<F(10)<<endl;
	cout<<3 + F(1)<<endl;
	cout<<4/F(3.5)<<endl;

	return 0;
}
///////////////////////////////////////////////////////////////////////////////

//Implementación y llamada de una función con dos argumentos de entrada

#include <iostream>

using namespace std;

double F(double x, double y)  //declaración de la función
{
	return 2*x+y;
}

int main()
{
	cout<<F(10,3)<<endl;
	cout<<3 + F(1,7)<<endl;
	cout<<4/F(3.5,2)<<endl;

	return 0;
}
////////////////////////////////////////////////////////////////////////////////

//una función tambien puede recibir el valor de dos variables al ser invocada

#include <iostream>

using namespace std;

float F(float x, float y) //declaracion de la funcion
{
  return 2*x + y;
}


int main()
{
	float num1, num2, x;
	
	cout<<"Ingrese dos numeros: ";  cin>>num1>>num2;
	
       //invocar a la funcion
       x = F(num1,num2);  //se envian a la función los valores almacenados en num1 y num2
                          //El valor retornado por la función es enviado a la vble. x.
   
      cout<<x;
   
   
   
   return 0;	
}
///////////////////////////////////////////////////////////////////////////////

//una función puede ser invocada varias veces (dentro de un lazo repetitivo)
#include <iostream>

using namespace std;

int F(int x, int y) //declaracion de la funcion
{
  return 2*x + y;
}


int main()
{
   for(int i=1;i<=10;i++)
   {
      cout<<F(i, i+1)<<endl;  
   }
   
  
   return 0;	
}
////////////////////////////////////////////////////////////////////////////////


//TIP: una variable local solo existe en el contexto de la función

#include <iostream>

using namespace std;

float F(float x, float y) //declaracion de la funcion
{                         //x e y son variables locales
  return 2*x + y;
}


int main()
{	
   //invocar a la funcion
   cout<<F(8,3); 
   
   cout<<x; //error, x no existe por es local en la funcion F
   
      
   return 0;	
}

///////////////////////////////////////////////////////////////////////////////

//funcion que genera un valor aleatorio en el rango [a, b]

#include <iostream>
#include <ctime>
#include <cstdlib>

using namespace std;

int generaAleatorio(int a, int b)
{	
    return rand()%(b-a+1)+a;
}

int main()
{
	srand(time(NULL));
	
    cout<<"Aleatorio en el rango [10,20]: "<<generaAleatorio(10,20);
    cout<<"\nAleatorio en el rango [5,12]: "<<generaAleatorio(5,12);
    cout<<"\nAleatorio en el rango [100,999]: "<<generaAleatorio(100,999);
    cout<<"\nAleatorio en el rango [0,30]: "<<generaAleatorio(0,30);

return 0;
}

///////////////////////////////////////////////////////////////////////////////////////

//Implementación y llamada de una función que retorna el factorial de un numero

#include <iostream>

using namespace std;

double factorial(int n)
{
   double fact=1;
   
   for(int i=1;i<=n;i++)
   {
   	  fact = fact*i;
   }
   
   return fact;
}

int main()
{
	cout<<"Factorial de 1 es: "<<factorial(1)<<endl;
	cout<<"Factorial de 5 es: "<<factorial(5)<<endl;
	cout<<"Factorial de 7 es: "<<factorial(7)<<endl;
	cout<<"Factorial de 10 es: "<<factorial(10)<<endl;

	return 0;
}

//////////////////////////////////////////////////////////////////////////////////

//Implementación de una funcion que imprime una linea de n asteriscos (funcion sin retorno)

#include <iostream>
#include <ctime>
#include <cstdlib>

using namespace std;

void imprimeLinea(int n)
{
   for(int i=1;i<=n;i++)
   {
   	 cout<<"*";
   }
}


int main()
{
    imprimeLinea(10);
    cout<<endl;
    
    imprimeLinea(5);
    cout<<endl;
    
    imprimeLinea(50);
    cout<<endl;


    return 0;
}
////////////////////////////////////////////////////////////////////////////////////////

//Implementación de una función que dibuja un rectangulo con caracteres *

#include <iostream>

using namespace std;

void dibujaRectangulo(int l, int h)
{
	for(int i=1; i<=l; i++)
	{
		for(int j=1;j<=h;j++)
		{
			if(i==1 || i==l || j==1 || j==h)
			  cout<<"*";
			else
			  cout<<" ";
		}
		cout<<endl;
	}
}



int main(){
	
    srand(time(NULL));
   
    int n, m;
   
    for(int i=1;i<=20;i++)
    {
   	 n = rand()%(20-3+1)+3;
   	 m = rand()%(20-3+1)+3;
   	 
   	 dibujarRectangulo(n,m);  //la función puede ser invocada varias veces
         cout<<endl;
        
    }	
	
    return 0;
}